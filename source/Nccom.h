
class HighLevelEvent;

extern int filechanged(const RCCHAR *title,const RCCHAR *prompt);
extern int filechanged(const char *title,const char *prompt);
extern void animation_command(int *cstate,HighLevelEvent *,void **);
extern void application_command(int *cstate,HighLevelEvent *,void **);
extern void simulation_command(int *cstate,HighLevelEvent *,void **);
extern void nc_command(int *cstate,HighLevelEvent *,void **);
extern void architect_command0(int *cstate,HighLevelEvent *,void **);
extern void print_command(int *cstate,HighLevelEvent *);
extern void printpreview_command1(int *cstate,HighLevelEvent *,void **);
extern void printpreview_command2(int *cstate,HighLevelEvent *,void **);
extern void printpreview_command3(int *cstate,HighLevelEvent *,void **);
extern void printpreview_command4(int *cstate,HighLevelEvent *,void **);
extern void printpreview_command5(int *cstate,HighLevelEvent *,void **);
extern void printpreview_command6(int *cstate,HighLevelEvent *,void **);
extern void print_setup(int *cstate,HighLevelEvent *,void **);
extern void attribute_command1(int *cstate,HighLevelEvent *,void **);
extern void attribute_command2(int *cstate,HighLevelEvent *,void **);
extern void attribute_command3(int *cstate,HighLevelEvent *,void **);
extern void attribute_command4(int *cstate,HighLevelEvent *,void **);
extern void new_text_command0(int *cstate,HighLevelEvent *,void **);
extern void text_command0(int *cstate,HighLevelEvent *,void **);
extern void text_command1(int *cstate,HighLevelEvent *,void **);
extern void text_command2(int *cstate,HighLevelEvent *,void **);
extern void text_command3(int *cstate,HighLevelEvent *,void **);
extern void text_command4(int *cstate,HighLevelEvent *,void **);
extern void text_command5(int *cstate,HighLevelEvent *,void **);
extern void text_command6(int *cstate,HighLevelEvent *,void **);
extern void text_command7(int *cstate,HighLevelEvent *,void **);
extern void new_figure_command0(int *cstate,HighLevelEvent *,void **);
extern void figure_command0(int *cstate,HighLevelEvent *,void **);
extern void figure_command1(int *cstate,HighLevelEvent *,void **);
extern void figure_command2(int *cstate,HighLevelEvent *,void **);
extern void figure_command3(int *cstate,HighLevelEvent *,void **);
extern void figure_command4(int *cstate,HighLevelEvent *,void **);
extern void figure_command5(int *cstate,HighLevelEvent *,void **);
extern void figure_command6(int *cstate,HighLevelEvent *,void **);
extern void bitmap_command0(int *cstate,HighLevelEvent *,void **);
extern void bitmap_command1(int *cstate,HighLevelEvent *,void **);
extern void bitmap_command2(int *cstate,HighLevelEvent *,void **);
extern void bitmap_command3(int *cstate,HighLevelEvent *,void **);
extern void group_command0(int *cstate,HighLevelEvent *,void **);
extern void group_command1(int *cstate,HighLevelEvent *,void **);
extern void group_command2(int *cstate,HighLevelEvent *,void **);
extern void group_command3(int *cstate,HighLevelEvent *,void **);
extern void group_command4(int *cstate,HighLevelEvent *,void **);
extern void group_command5(int *cstate,HighLevelEvent *,void **);
extern void dimen_command0(int *cstate,HighLevelEvent *,void **);
extern void dimen_command1(int *cstate,HighLevelEvent *,void **);
extern void dimen_command2(int *cstate,HighLevelEvent *,void **);
extern void dimen_command3(int *cstate,HighLevelEvent *,void **);
extern void dimen_command4(int *cstate,HighLevelEvent *,void **);
extern void dimen_command5(int *cstate,HighLevelEvent *,void **);
extern void dimen_command6(int *cstate,HighLevelEvent *,void **);
extern void dimen_command7(int *cstate,HighLevelEvent *,void **);
extern void dimen_command8(int *cstate,HighLevelEvent *,void **);
extern void dimen_command9(int *cstate,HighLevelEvent *,void **);
extern void dimen_command10(int *cstate,HighLevelEvent *,void **);
extern void dimen_command11(int *cstate,HighLevelEvent *,void **);
extern void dimen_command12(int *cstate,HighLevelEvent *,void **);
extern void leader_command(int *cstate,HighLevelEvent *,void **);
extern void dimen_addpoint(int *cstate,HighLevelEvent *,void **);
extern void dimen_delpoint(int *cstate,HighLevelEvent *,void **);
extern void dimen_movepoint(int *cstate,HighLevelEvent *,void **);
extern void solid_command0(int *cstate,HighLevelEvent *,void **);
extern void surface_command0(int *cstate,HighLevelEvent *,void **);
extern void new_surface_command0(int *cstate,HighLevelEvent *,void **);
extern void plane_command0(int *cstate,HighLevelEvent *,void **);
extern void plane_command1(int *cstate,HighLevelEvent *,void **);
extern void plane_command2(int *cstate,HighLevelEvent *,void **);
extern void plane_command3(int *cstate,HighLevelEvent *,void **);
extern void plane_command4(int *cstate,HighLevelEvent *,void **);
extern void plane_command5(int *cstate,HighLevelEvent *,void **);
extern void plane_command6(int *cstate,HighLevelEvent *,void **);
extern void plane_command7(int *cstate,HighLevelEvent *,void **);
extern void plane_command8(int *cstate,HighLevelEvent *,void **);
extern void plane_command9(int *cstate,HighLevelEvent *,void **);
extern void plane_command10(int *cstate,HighLevelEvent *,void **);
extern void plane_command11(int *cstate,HighLevelEvent *,void **);
extern void plane_command12(int *cstate,HighLevelEvent *,void **);
extern void plane_command13(int *cstate,HighLevelEvent *,void **);
extern void ruledsurface_command1(int *cstate,HighLevelEvent *,void **);
extern void ruledsurface_command2(int *cstate,HighLevelEvent *,void **);
extern void ruledsurface_command3(int *cstate,HighLevelEvent *,void **);
extern void surfaceofrev_command1(int *cstate,HighLevelEvent *,void **);
extern void surfaceofrev_command2(int *cstate,HighLevelEvent *,void **);
extern void surfaceofrev_command3(int *cstate,HighLevelEvent *,void **);
extern void flatpattern_command(int *cstate,HighLevelEvent *,void **);
extern void insertspiral_command(int *cstate,HighLevelEvent *,void **);
extern void point_command0(int *cstate,HighLevelEvent *,void **);
extern void point_command1(int *cstate,HighLevelEvent *,void **);
extern void point_command2(int *cstate,HighLevelEvent *,void **);
extern void line_command0(int *cstate,HighLevelEvent *,void **);
extern void line_command1(int *cstate,HighLevelEvent *,void **);
extern void line_command2(int *cstate,HighLevelEvent *,void **);
extern void line_command3(int *cstate,HighLevelEvent *,void **);
extern void line_command4(int *cstate,HighLevelEvent *,void **);
extern void line_command5(int *cstate,HighLevelEvent *,void **);
extern void line_command6(int *cstate,HighLevelEvent *,void **);
extern void line_command7(int *cstate,HighLevelEvent *,void **);
extern void line_command8(int *cstate,HighLevelEvent *,void **);
extern void line_command9(int *cstate,HighLevelEvent *,void **);
extern void circle_command0(int *cstate,HighLevelEvent *,void **);
extern void circle_command1(int *cstate,HighLevelEvent *,void **);
extern void circle_command2(int *cstate,HighLevelEvent *,void **);
extern void circle_command3(int *cstate,HighLevelEvent *,void **);
extern void circle_command4(int *cstate,HighLevelEvent *,void **);
extern void ellipse_command1(int *cstate,HighLevelEvent *,void **);
extern void ellipse_command2(int *cstate,HighLevelEvent *,void **);
extern void arc_command0(int *cstate,HighLevelEvent *,void **);
extern void arc_command1(int *cstate,HighLevelEvent *,void **);
extern void arc_command2(int *cstate,HighLevelEvent *,void **);
extern void arc_command3(int *cstate,HighLevelEvent *,void **);
extern void arc_command4(int *cstate,HighLevelEvent *,void **);
extern void curve_command0(int *cstate,HighLevelEvent *,void **);
extern void curve_command1(int *cstate,HighLevelEvent *,void **);
extern void curve_command2(int *cstate,HighLevelEvent *,void **);
extern void curve_command3(int *cstate,HighLevelEvent *,void **);
extern void curve_command4(int *cstate,HighLevelEvent *,void **);
extern void curve_command5(int *cstate,HighLevelEvent *,void **);
extern void curve_command6(int *cstate,HighLevelEvent *,void **);
extern void trim_command0(int *cstate,HighLevelEvent *,void **);
extern void trim_command1(int *cstate,HighLevelEvent *,void **);
extern void trim_command2(int *cstate,HighLevelEvent *,void **);
extern void trim_command3(int *cstate,HighLevelEvent *,void **);
extern void trim_command4(int *cstate,HighLevelEvent *,void **);
extern void trim_command5(int *cstate,HighLevelEvent *,void **);
extern void trim_command6(int *cstate,HighLevelEvent *,void **);
extern void trim_command7(int *cstate,HighLevelEvent *,void **);
extern void trim_command8(int *cstate,HighLevelEvent *,void **);
extern void trim_command9(int *cstate,HighLevelEvent *,void **);
extern void trim_command10(int *cstate,HighLevelEvent *,void **);
extern void trim_command11(int *cstate,HighLevelEvent *,void **);
extern void workplane_command1(int *cstate,HighLevelEvent *,void **);
extern void workplane_command2(int *cstate,HighLevelEvent *,void **);
extern void workplane_command3(int *cstate,HighLevelEvent *,void **);
extern void workplane_command4(int *cstate,HighLevelEvent *,void **);
extern void workplane_command5(int *cstate,HighLevelEvent *,void **);
extern void workplane_command6(int *cstate,HighLevelEvent *,void **);
extern void workplane_command7(int *cstate,HighLevelEvent *,void **);
extern void window_command1(int *cstate,HighLevelEvent *,void **);
extern void shade_command1(int *cstate,HighLevelEvent *,void **);
extern void hide_command1(int *cstate,HighLevelEvent *,void **);
extern void hide_command2(int *cstate,HighLevelEvent *,void **);
extern void raytrace_command1(int *cstate,HighLevelEvent *,void **);
extern void raytrace_command2(int *cstate,HighLevelEvent *,void **);
extern void raytrace_command3(int *cstate,HighLevelEvent *,void **);
extern void raytrace_command4(int *cstate,HighLevelEvent *,void **);
extern void raytrace_command5(int *cstate,HighLevelEvent *,void **);
extern void insertlightatsunposition_command(int *cstate,HighLevelEvent *,void **);
extern void view_command1(int *cstate,HighLevelEvent *,void **);
extern void view_command2(int *cstate,HighLevelEvent *,void **);
extern void view_command3(int *cstate,HighLevelEvent *,void **);
extern void view_command4(int *cstate,HighLevelEvent *,void **);
extern void view_command5(int *cstate,HighLevelEvent *,void **);
extern void view_command6(int *cstate,HighLevelEvent *,void **);
extern void view_command7(int *cstate,HighLevelEvent *,void **);
extern void view_command8(int *cstate,HighLevelEvent *,void **);
extern void view_command9(int *cstate,HighLevelEvent *,void **);
extern void view_command10(int *cstate,HighLevelEvent *,void **);
extern void view_command11(int *cstate,HighLevelEvent *,void **);
extern void view_command12(int *cstate,HighLevelEvent *,void **);
extern void view_command13(int *cstate,HighLevelEvent *,void **);
extern void view_command14(int *cstate,HighLevelEvent *,void **);
extern void view_command15(int *cstate,HighLevelEvent *,void **);
extern void view_command16(int *cstate,HighLevelEvent *,void **);
extern void view_command17(int *cstate,HighLevelEvent *,void **);
extern void view_command18(int *cstate,HighLevelEvent *,void **);
extern void view_command19(int *cstate,HighLevelEvent *,void **);
extern void view_command20(int *cstate,HighLevelEvent *,void **);
extern void view_command21(int *cstate,HighLevelEvent *,void **);
extern void view_command22(int *cstate,HighLevelEvent *,void **);
extern void view_command23(int *cstate,HighLevelEvent *,void **);
extern void view_command24(int *cstate,HighLevelEvent *,void **);
extern void view_command25(int *cstate,HighLevelEvent *,void **);
extern void view_command26(int *cstate,HighLevelEvent *,void **);
extern void view_command27(int *cstate,HighLevelEvent *,void **);
extern void view_command28(int *cstate,HighLevelEvent *,void **);
extern void view_command29(int *cstate,HighLevelEvent *,void **);
extern void view_command30(int *cstate,HighLevelEvent *,void **);
extern void view_command31(int *cstate,HighLevelEvent *,void **);
extern void view_command32(int *cstate,HighLevelEvent *,void **);
extern void view_command33(int *cstate,HighLevelEvent *,void **);
extern void view_command34(int *cstate,HighLevelEvent *,void **);
extern void view_command35(int *cstate,HighLevelEvent *,void **);
extern void view_command36(int *cstate,HighLevelEvent *,void **);
extern void view_command37(int *cstate,HighLevelEvent *,void **);
extern void view_command38(int *cstate,HighLevelEvent *,void **);
extern void view_command39(int *cstate,HighLevelEvent *,void **);
extern void view_command40(int *cstate,HighLevelEvent *,void **);
extern void view_command41(int *cstate,HighLevelEvent *,void **);
extern void view_command42(int *cstate,HighLevelEvent *,void **);
extern void view_command43(int *cstate,HighLevelEvent *,void **);
// KMJ new view commands
extern void view_command44(int *cstate,HighLevelEvent *,void **);
extern void view_command45(int *cstate,HighLevelEvent *,void **);
extern void view_command46(int *cstate,HighLevelEvent *,void **);
extern void view_command47(int *cstate,HighLevelEvent *,void **);
extern void view_command48(int *cstate,HighLevelEvent *event,void **data); // toggle full screen
//
extern void paint_command0(int *cstate,HighLevelEvent *,void **);
extern void grid_command1(int *cstate,HighLevelEvent *,void **);
extern void grid_command2(int *cstate,HighLevelEvent *,void **);
extern void grid_command3(int *cstate,HighLevelEvent *,void **);
extern void grid_command4(int *cstate,HighLevelEvent *,void **);
extern void grid_command5(int *cstate,HighLevelEvent *,void **);
extern void window_command2(int *cstate,HighLevelEvent *,void **);
extern void window_command3(int *cstate,HighLevelEvent *,void **);
extern void window_command4(int *cstate,HighLevelEvent *,void **);
extern void window_command5(int *cstate,HighLevelEvent *,void **);
extern void window_command6(int *cstate,HighLevelEvent *,void **);
extern void window_command7(int *cstate,HighLevelEvent *,void **);
extern void window_command8(int *cstate,HighLevelEvent *,void **);
extern void window_command9(int *cstate,HighLevelEvent *,void **);
extern void window_command10(int *cstate,HighLevelEvent *,void **);
extern void window_command11(int *cstate,HighLevelEvent *,void **);
extern void zoom_command0(int *cstate,HighLevelEvent *,void **);
extern void zoom_command1(int *cstate,HighLevelEvent *,void **);
extern void zoom_command2(int *cstate,HighLevelEvent *,void **);
extern void zoom_command3(int *cstate,HighLevelEvent *,void **);
extern void zoom_command4(int *cstate,HighLevelEvent *,void **);
extern void zoom_command5(int *cstate,HighLevelEvent *,void **);
extern void zoom_command6(int *cstate,HighLevelEvent *,void **);
extern void zoom_command7(int *cstate,HighLevelEvent *,void **);
extern void zoom_command8(int *cstate,HighLevelEvent *,void **);
extern void zoom_command9(int *cstate,HighLevelEvent *,void **);
extern void position_command0(int *cstate,HighLevelEvent *,void **);
extern void position_command1(int *cstate,HighLevelEvent *,void **);
extern void position_command2(int *cstate,HighLevelEvent *,void **);
extern void position_command3(int *cstate,HighLevelEvent *,void **);
extern void undo_command(int *cstate,HighLevelEvent *,void **);
extern void redo_command(int *cstate,HighLevelEvent *,void **);
extern void cut_command(int *cstate,HighLevelEvent *,void **);
extern void copy_command(int *cstate,HighLevelEvent *,void **);
extern void copymeta_command(int *cstate,HighLevelEvent *,void **);
extern void copymetawindow_command(int *cstate,HighLevelEvent *,void **);
extern void copybitmap_command(int *cstate,HighLevelEvent *,void **);
extern void copybitmap_toclipboard_command(int *cstate,HighLevelEvent *,void **);
extern void copybitmapwindow_toclipboard_command(int *cstate,HighLevelEvent *,void **);
extern void paste_command(int *cstate,HighLevelEvent *,void **);
extern void delete_command(int *cstate,HighLevelEvent *,void **);
extern void stretch_command(int *cstate,HighLevelEvent *,void **);
extern void translate_command(int *cstate,HighLevelEvent *,void **);
extern void copyarray_command(int *cstate,HighLevelEvent *,void **);
extern void copyalong_command(int *cstate,HighLevelEvent *,void **);
extern void move_command(int *cstate,HighLevelEvent *,void **);
extern void project_command(int *cstate,HighLevelEvent *,void **);
extern void scale_command(int *cstate,HighLevelEvent *,void **);
extern void mirror_command(int *cstate,HighLevelEvent *,void **);
extern void rotate_command(int *cstate,HighLevelEvent *,void **);
extern void file_command0(int *cstate,HighLevelEvent *,void **);
extern void file_toolscommand(int *cstate,HighLevelEvent *,void **);
extern void file_emailcommand(int *cstate,HighLevelEvent *,void **);
extern void file_command1(int *cstate,HighLevelEvent *,void **);
extern void file_newfromtemplate(int *cstate,HighLevelEvent *,void **);
extern void file_command2(int *cstate,HighLevelEvent *,void **);
extern void file_command3(int *cstate,HighLevelEvent *,void **);
extern void file_command4(int *cstate,HighLevelEvent *,void **);
extern void file_command5(int *cstate,HighLevelEvent *,void **);
extern void file_command6(int *cstate,HighLevelEvent *,void **);
extern void file_command7(int *cstate,HighLevelEvent *,void **);
extern void file_command8(int *cstate,HighLevelEvent *,void **);
extern void file_command9(int *cstate,HighLevelEvent *,void **);
extern void file_command10(int *cstate,HighLevelEvent *,void **);
extern void file_command11(int *cstate,HighLevelEvent *,void **);
extern void file_command12(int *cstate,HighLevelEvent *,void **);
extern void file_command13(int *cstate,HighLevelEvent *,void **);
extern void file_command14(int *cstate,HighLevelEvent *,void **);
extern void file_command15(int *cstate,HighLevelEvent *,void **);
extern void file_command16(int *cstate,HighLevelEvent *,void **);
extern void file_command17(int *cstate,HighLevelEvent *,void **);
extern void file_command20(int *cstate,HighLevelEvent *,void **);
extern void file_3DWarehouse(int *cstate,HighLevelEvent *,void **);
extern void password_command(int *cstate,HighLevelEvent *,void **);
extern void command_command(int *cstate,HighLevelEvent *,void **);
extern void toolmenu_command(int *cstate,HighLevelEvent *,void **);
extern void interruptmenu_command(int *cstate,HighLevelEvent *,void **);
extern void quickmenu_command(int *cstate,HighLevelEvent *,void **);
extern void applicationmenu_command(int *cstate,HighLevelEvent *,void **);
extern void prompt_command(int *cstate,HighLevelEvent *,void **);
// new mask commands
extern void mask_command100(int *cstate,HighLevelEvent *,void **);
extern void mask_command101(int *cstate,HighLevelEvent *,void **);
extern void mask_command102(int *cstate,HighLevelEvent *,void **);
extern void mask_command103(int *cstate,HighLevelEvent *,void **);
extern void mask_command104(int *cstate,HighLevelEvent *,void **);
extern void mask_command105(int *cstate,HighLevelEvent *,void **);
extern void mask_command106(int *cstate,HighLevelEvent *,void **);
extern void mask_command107(int *cstate,HighLevelEvent *,void **);
extern void mask_command108(int *cstate,HighLevelEvent *,void **);
extern void mask_command109(int *cstate,HighLevelEvent *,void **);
extern void mask_command110(int *cstate,HighLevelEvent *,void **);
extern void mask_command111(int *cstate,HighLevelEvent *,void **);
// old mask commands
extern void mask_command0(int *cstate,HighLevelEvent *,void **);
extern void mask_command1(int *cstate,HighLevelEvent *,void **);
extern void mask_command2(int *cstate,HighLevelEvent *,void **);
extern void mask_command3(int *cstate,HighLevelEvent *,void **);
extern void mask_command4(int *cstate,HighLevelEvent *,void **);
extern void mask_command5(int *cstate,HighLevelEvent *,void **);
extern void mask_command6(int *cstate,HighLevelEvent *,void **);
extern void mask_command7(int *cstate,HighLevelEvent *,void **);
extern void mask_command8(int *cstate,HighLevelEvent *,void **);
extern void mask_command9(int *cstate,HighLevelEvent *,void **);
extern void mask_command10(int *cstate,HighLevelEvent *,void **);
extern void mask_command11(int *cstate,HighLevelEvent *,void **);
//
extern void mask_snaps_command(int *cstate,HighLevelEvent *,void **);
//
// KMJ : new property commands
extern void entity_commandEx(int *cstate,HighLevelEvent *,void **);
extern void colour_commandEx(int *cstate,HighLevelEvent *,void **);
extern void layer_commandEx(int *cstate,HighLevelEvent *,void **);
extern void style_commandEx(int *cstate,HighLevelEvent *,void **);
extern void weight_commandEx(int *cstate,HighLevelEvent *,void **);
extern void general_property_command(int *cstate,HighLevelEvent *,void **);
extern void background_colour_command(int *cstate,HighLevelEvent *,void **);
extern void select_colour_command(int *cstate,HighLevelEvent *,void **);
extern void gp_execute_command(int *cstate,HighLevelEvent *,void **);
extern void gp_dialog_command(int *cstate,HighLevelEvent *event,void **s);

// KMJ : old propery commands
extern void colour_command(int *cstate,HighLevelEvent *,void **);
extern void layer_command(int *cstate,HighLevelEvent *,void **);
extern void layerwindow_command(int *cstate,HighLevelEvent *,void **);
extern void style_command(int *cstate,HighLevelEvent *,void **);
extern void styleset_command(int *cstate,HighLevelEvent *,void **);
extern void weight_command(int *cstate,HighLevelEvent *,void **);

extern void measure_command0(int *cstate,HighLevelEvent *,void **);
extern void measure_command1(int *cstate,HighLevelEvent *,void **);
extern void measure_command2(int *cstate,HighLevelEvent *,void **);
extern void measure_command3(int *cstate,HighLevelEvent *,void **);
extern void measure_command4(int *cstate,HighLevelEvent *,void **);
extern void dxfin_command(int *cstate,HighLevelEvent *,void **);
extern void dxfout_command(int *cstate,HighLevelEvent *,void **);
extern void dwgin_command(int *cstate,HighLevelEvent *,void **);
extern void dwgout_command(int *cstate,HighLevelEvent *,void **);
extern void igesin_command(int *cstate,HighLevelEvent *,void **);
extern void igesout_command(int *cstate,HighLevelEvent *,void **);
extern void strokedigesout_command(int *cstate,HighLevelEvent *,void **);
extern void hpglin_command(int *cstate,HighLevelEvent *,void **);
extern void hpglout_command(int *cstate,HighLevelEvent *,void **);
extern void medusain_command(int *cstate,HighLevelEvent *,void **);
extern void metafilein_command(int *cstate,HighLevelEvent *,void **);
extern void skpfilein_command(int *cstate,HighLevelEvent *,void **);
extern void zone_command1(int *cstate,HighLevelEvent *,void **);
extern void zone_command2(int *cstate,HighLevelEvent *,void **);
extern void zone_command3(int *cstate,HighLevelEvent *,void **);
extern void arrange_command0(int *cstate,HighLevelEvent *,void **);
extern void arrange_command1(int *cstate,HighLevelEvent *,void **);
extern void arrange_command2(int *cstate,HighLevelEvent *,void **);
extern void arrange_command3(int *cstate,HighLevelEvent *,void **);
extern void arrange_command4(int *cstate,HighLevelEvent *,void **);
extern void patch_command1(int *cstate,HighLevelEvent *,void **);
extern void patch_command2(int *cstate,HighLevelEvent *,void **);
extern void patch_command3(int *cstate,HighLevelEvent *,void **);
extern void patch_command4(int *cstate,HighLevelEvent *,void **);
extern void patch_compare_command(int *cstate,HighLevelEvent *,void **);
extern void createwindow_command0(int *cstate,HighLevelEvent *,void **);
extern void createwindow_command1(int *cstate,HighLevelEvent *,void **);
extern void resetwindow_command0(int *cstate,HighLevelEvent *,void **);
extern void resetwindow_command1(int *cstate,HighLevelEvent *,void **);
extern void custom_command1(int *cstate,HighLevelEvent *,void **);
extern void custom_command2(int *cstate,HighLevelEvent *,void **);
extern void custom_command3(int *cstate,HighLevelEvent *,void **);
extern void custom_command4(int *cstate,HighLevelEvent *,void **);
extern void custom_command5(int *cstate,HighLevelEvent *,void **);
extern void custom_command6(int *cstate,HighLevelEvent *,void **);
extern void custom_command7(int *cstate,HighLevelEvent *,void **);
extern void custom_command8(int *cstate,HighLevelEvent *,void **);
extern void custom_command9(int *cstate,HighLevelEvent *,void **);
extern void custom_command10(int *cstate,HighLevelEvent *,void **);
extern void custom_command11(int *cstate,HighLevelEvent *,void **);
extern void custom_command12(int *cstate,HighLevelEvent *,void **);
extern void custom_command13(int *cstate,HighLevelEvent *,void **);
extern void custom_command14(int *cstate,HighLevelEvent *,void **);
extern void custom_command15(int *cstate,HighLevelEvent *,void **);
extern void custom_command16(int *cstate,HighLevelEvent *,void **);
extern void custom_command17(int *cstate,HighLevelEvent *,void **);
extern void custom_command18(int *cstate,HighLevelEvent *,void **);
extern void custom_command19(int *cstate,HighLevelEvent *,void **);
extern void findandreplace_command(int *cstate,HighLevelEvent *,void **);
extern void findinfiles_command(int *cstate,HighLevelEvent *,void **);
extern void editinfo_command(int *cstate,HighLevelEvent *,void **);
extern void system_command1(int *cstate,HighLevelEvent *,void **);
extern void system_command2(int *cstate,HighLevelEvent *,void **);
extern void help_command1(int *cstate,HighLevelEvent *,void **);
extern void help_command2(int *cstate,HighLevelEvent *,void **);
extern void help_command3(int *cstate,HighLevelEvent *,void **);
extern void help_command4(int *cstate,HighLevelEvent *,void **);
extern void animation_command1(int *cstate,HighLevelEvent *event,void **);
extern void animation_command2(int *cstate,HighLevelEvent *event,void **);
extern void animation_command3(int *cstate,HighLevelEvent *event,void **);
extern void animation_command4(int *cstate,HighLevelEvent *event,void **);
extern void animation_command5(int *cstate,HighLevelEvent *event,void **);
extern void animation_command6(int *cstate,HighLevelEvent *event,void **);
extern void animation_command7(int *cstate,HighLevelEvent *event,void **);
extern void animation_command8(int *cstate,HighLevelEvent *event,void **);
extern void animation_command9(int *cstate,HighLevelEvent *event,void **);
extern void animation_command10(int *cstate,HighLevelEvent *event,void **);
extern void animation_command11(int *cstate,HighLevelEvent *event,void **);
extern void animation_command12(int *cstate,HighLevelEvent *event,void **);
extern void compose_command0(int *cstate,HighLevelEvent *event,void **);
extern void renamedrawing_command(int *cstate,HighLevelEvent *event,void **);
extern void view_command0(int *cstate,HighLevelEvent *event,void **);
extern void render_command0(int *cstate,HighLevelEvent *event,void **);
extern void clone_command(int *cstate,HighLevelEvent *event,void **);
#ifdef USING_WIDGETS
extern void clone_colour_command(int *cstate,HighLevelEvent *event,void **);
extern void clone_layer_command(int *cstate,HighLevelEvent *event,void **);
extern void clone_style_command(int *cstate,HighLevelEvent *event,void **);
extern void clone_weight_command(int *cstate,HighLevelEvent *event,void **);
extern void define_pattern_line_style_command(int *cstate,HighLevelEvent *event,void **);
extern void clone_all_command(int *cstate,HighLevelEvent *event,void **s);
extern void clone_to_default_colour_command(int *cstate,HighLevelEvent *event,void **s);
extern void clone_to_default_layer_command(int *cstate,HighLevelEvent *event,void **s);
extern void clone_to_default_style_command(int *cstate,HighLevelEvent *event,void **s);
extern void clone_to_default_weight_command(int *cstate,HighLevelEvent *event,void **s);
extern void clone_all_to_default_command(int *cstate,HighLevelEvent *event,void **s);
#endif
extern void keyboard_command(int *cstate,HighLevelEvent *event,void **);
extern void material_command(int *cstate,HighLevelEvent *event,void **);
extern void panel_command_insert(int *cstate,HighLevelEvent *event,void **);
extern void panel_command_delete_vertex(int *cstate,HighLevelEvent *event,void **);
extern void panel_command_insert_vertex(int *cstate,HighLevelEvent *event,void **);
extern void panel_command_insert_hole(int *cstate,HighLevelEvent *event,void **);
extern void panel_command_delete_hole(int *cstate,HighLevelEvent *event,void **);
extern void panel_command_align(int *cstate,HighLevelEvent *event,void **);
extern void panel_command_thickness(int *cstate,HighLevelEvent *event,void **);
extern void panel_command_renumber(int *cstate,HighLevelEvent *event,void **);
extern void panel_command_layout(int *cstate,HighLevelEvent *event,void **);
extern void panel_command_export_csv(int *cstate,HighLevelEvent *event,void **);
extern void showproperties_command(int *cstate,HighLevelEvent *event,void **);
extern void view_switch_screens_command(int *cstate,HighLevelEvent *event,void **);

// KMJ new view style commands
extern void viewstyle_command0(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command1(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command2(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command3(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command4(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command5(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command6(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command7(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command8(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command9(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command10(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command11(int *cstate,HighLevelEvent *event,void **);
extern void viewstyle_command12(int *cstate,HighLevelEvent *event,void **);

// KMJ capture commands
extern void capture_command0(int *cstate,HighLevelEvent *event,void **);
extern void capture_command1(int *cstate,HighLevelEvent *event,void **);
extern void capture_command2(int *cstate,HighLevelEvent *event,void **);
extern void capture_command3(int *cstate,HighLevelEvent *event,void **);
extern void capture_command4(int *cstate,HighLevelEvent *event,void **);
extern void capture_command5(int *cstate,HighLevelEvent *event,void **);
extern void capture_command6(int *cstate,HighLevelEvent *event,void **);
extern void capture_command7(int *cstate,HighLevelEvent *event,void **);
extern void capture_command8(int *cstate,HighLevelEvent *event,void **);
extern void capture_command9(int *cstate,HighLevelEvent *event,void **);
extern void capture_command10(int *cstate,HighLevelEvent *event,void **);

/*
    KMJ : added since 2016/08
*/
extern void selectsamecolour_command(int *cstate,HighLevelEvent *,void **);
extern void selectsamelayer_command(int *cstate,HighLevelEvent *,void **);
extern void selectsamestyle_command(int *cstate,HighLevelEvent *,void **);
extern void selectsameweight_command(int *cstate,HighLevelEvent *,void **);
extern void selectsameentity_command(int *cstate,HighLevelEvent *,void **);
extern void selectsamename_command(int *cstate,HighLevelEvent *,void **);
extern void hidesamecolour_command(int *cstate,HighLevelEvent *,void **);
extern void hidesamelayer_command(int *cstate,HighLevelEvent *,void **);
extern void hidesamestyle_command(int *cstate,HighLevelEvent *,void **);
extern void hidesameweight_command(int *cstate,HighLevelEvent *,void **);
extern void hidesameentity_command(int *cstate,HighLevelEvent *,void **);
extern void hidesamename_command(int *cstate,HighLevelEvent *,void **);
extern void unhideallentities_command(int *cstate,HighLevelEvent *,void **);
